---
# Ansible playbook for the distributed deployment of our Digital Specimen Repository.
# It uses 5 machines, one with the cordra repository, a second one with the cordra provenance repository, a third one with elasticsearch used for both cordra instances,
# a forth one with mongodb that is the storage used for both cordra instance, and a fifth one with monitoring tools like prometheus, kibana and grafana
#
- hosts: all
  order: inventory
  gather_facts: yes
  pre_tasks:
    - name: Keep connections alive when enabling the firewall
      block:
        - name: Add ip_conntrack kernel module
          modprobe:
            name: ip_conntrack
            state: present
        - name: Configure the kernel to keep connections alive when enabling the firewall
          sysctl:
            name: net.netfilter.nf_conntrack_tcp_be_liberal
            value: 1
            state: present
            sysctl_set: yes
            reload: yes
      become: true
  roles:
    - basic
    - node_exporter

- hosts: search_engine_servers
  gather_facts: yes
  tasks:
  - import_tasks: update_app_checker.yml
    vars:
      app_dir: "{{ elasticsearch.dir }}"
      app_version: "{{ elk_version }}"
      output_fact: elasticsearch_will_update

- hosts: db_servers
  gather_facts: yes
  tasks:
  - import_tasks: update_app_checker.yml
    vars:
      app_dir: "{{ mongodb.dir }}"
      app_version: "{{ mongodb_version }}"
      output_fact: mongodb_will_update

- hosts: cordra_servers
  tasks:
  - name: Stop cordra.service for before update
    block:
      - name: Stop cordra.service for before update
        systemd:
          name: cordra.service
          enabled: yes
          state: stopped
        when: hostvars['db_server']['mongodb_will_update'] or hostvars['search_engine_server']['elasticsearch_will_update']
    rescue:
      - debug:
          msg: "ERROR in trying to stop Cordra.service before DB or search engine update on {{ inventory_hostname }}"
    become: true
    become_user: root

- hosts: db_servers
  gather_facts: yes
  roles:
    - mongodb

- name: Include playbook to restore mongodb from the backup
  import_playbook: restore_backup.yml
  tags: [restore_backup]
  when: server.restore_db_backup_after_setup or hostvars['db_server']['mongodb_will_update']

- hosts: search_engine_servers
  gather_facts: yes
  roles:
    - elasticsearch
    - logstash

- hosts: cordra_servers
  gather_facts: yes
  roles:
    - role: filebeat
    - role: cordra

- hosts: monitoring_servers
  gather_facts: yes
  roles:
    - prometheus
    - grafana
    - kibana

- hosts: ds_viewer_servers
  gather_facts: yes
  roles:
    - ds_viewer
