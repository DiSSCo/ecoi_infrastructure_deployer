---
- name: Setup Blackbox exporter on {{ inventory_hostname }}
  block:
    - name: Save blackbox_exporter user credentials in passwdfile
      htpasswd:
        path: "{{ server.apps_dir + '/certs/passwdfile' }}"
        name: blackbox_exporter
        password: "{{ blackbox_exporter.admin_password }}"
        owner: "{{ server.user }}"
        group: "{{ server.group }}"
        mode: 0644

    # Download Blackbox_exporter distribution and unzip in /opt as zip has folder blackbox_exporter-x.x.x
    - name: Download and unarchive blackbox_exporter on {{ inventory_hostname }}
      unarchive:
        src: "{{ blackbox_exporter.distribution_url }}"
        remote_src: yes
        dest: "{{ server.apps_dir }}"
        creates: "{{ blackbox_exporter.dir }}"
        owner: "{{ server.user }}"
        group: "{{ server.group }}"
      register: blackbox_exporter_download

    - name: Create simbolic link between blackbox_exporter-x.x.x and blackbox_exporter directory on {{ inventory_hostname }}
      shell:
        cmd: find . -maxdepth 1 -type d -iname 'blackbox_exporter-*' -exec ln -s {} "{{ blackbox_exporter.dir }}" \;
        chdir: "{{ server.apps_dir }}"
        creates: "{{ blackbox_exporter.dir }}"
      when: blackbox_exporter_download.changed

    - name: Persist installed blackbox_exporter version in file for update control
      copy:
        dest: "{{ blackbox_exporter.dir + server.apps_version_file_suffix }}"
        content: "{{ blackbox_exporter_version }}"
        force: no

    - name: Configure Blackbox exporter
      template:
        src: "blackbox_exporter/blackbox.yml.j2"
        dest: "{{ blackbox_exporter.dir + '/blackbox.yml'}}"
      when: blackbox_exporter_download.changed

    - name: Config Blackbox Exporter service on {{ inventory_hostname }}
      template:
        src: systemd/blackbox_exporter.service.j2
        dest: /etc/systemd/system/blackbox_exporter.service
      when: blackbox_exporter_download.changed

    - name: Force systemd to reload configs on {{ inventory_hostname }}
      systemd:
        daemon_reload: yes
      when: blackbox_exporter_download.changed

    - name: Enable/Start Blackbox Exporter service on {{ inventory_hostname }}
      systemd:
        name: blackbox_exporter.service
        state: started
        enabled: yes
      when: blackbox_exporter_download.changed

  become: true
  become_user: root
  rescue:
    - debug:
        msg: "ERROR in Setup Blackbox exporter on {{ inventory_hostname }}"
  always:
    - debug:
        msg: "Setup Blackbox exporter FINISHED on {{ inventory_hostname }}"
  tags: ["install_software"]
