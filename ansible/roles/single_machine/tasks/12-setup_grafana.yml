---
- name: Setup Grafana
  block:
    # Download Grafana distribution and unzip in /opt as zip has folder grafana-x.x.x
    - name: Download and unarchive Grafana
      unarchive:
        src: "{{ grafana.distribution_url }}"
        remote_src: yes
        dest: "{{ server.apps_dir }}"
        creates: "{{ grafana.dir }}"
        owner: "{{ server.user }}"
        group: "{{ server.group }}"
      register: grafana_download

    - name: Fix permissions to grafana dir
      shell:
        cmd: chown -R "{{ server.user }}":"{{ server.group }}" "{{ grafana.dir }}"-*
        warn: false
      when: grafana_download.changed

    - name: Create simbolic link between grafana-x.x.x and grafana directory
      shell:
        cmd: find . -maxdepth 1 -type d -iname 'grafana-*' -exec ln -s {} "{{ grafana.dir }}" \;
        chdir: "{{ server.apps_dir }}"
        creates: "{{ grafana.dir }}"
      when: grafana_download.changed

    - name: Config Grafana installation
      template:
        src: "grafana/grafana.ini.j2"
        dest: "{{ grafana.dir + '/conf/grafana.ini'}}"
        owner: "{{ server.user }}"
        group: "{{ server.group }}"
      when: grafana_download.changed

    - name: Start Grafana using config file
      shell:
        cmd: nohup ./bin/grafana-server --config ./conf/grafana.ini >> ./grafana.log 2>&1 &
        chdir: "{{ grafana.dir }}"
      become_user: "{{ server.user }}"
      when: grafana_download.changed

    - name: Wait for Grafana http port to become open on the box, don't start checking for 5 seconds
      wait_for:
        port: "{{ grafana.http_internal_port }}"
        delay: 5
        timeout: 300
        state: started
        msg: "Grafana HTTP PORT is not Listening"
      when: grafana_download.changed
      register: grafana_up

  become: true
  become_user: root
  rescue:
    - debug:
        msg: "ERROR in Setup Grafana"
  always:
    - debug:
        msg: "Setup Grafana FINISHED"