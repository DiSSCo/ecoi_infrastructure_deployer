---
- name: Setup Prometheus on {{ inventory_hostname }}
  block:
    - name: Save prometheus user credentials in passwdfile on {{ inventory_hostname }}
      htpasswd:
        path: "{{ server.apps_dir + '/certs/passwdfile' }}"
        name: prometheus
        password: "{{ prometheus.admin_password }}"
        owner: "{{ server.user }}"
        group: "{{ server.group }}"
        mode: 0644

    # Download Prometheus distribution and unzip in /opt as zip has folder prometheus-x.x.x
    - name: Download and unarchive prometheus on {{ inventory_hostname }}
      unarchive:
        src: "{{ prometheus.distribution_url }}"
        remote_src: yes
        dest: "{{ server.apps_dir }}"
        creates: "{{ prometheus.dir }}"
        owner: "{{ server.user }}"
        group: "{{ server.group }}"
      register: prometheus_download

    - name: Create simbolic link between prometheus-x.x.x and prometheus directory on {{ inventory_hostname }}
      shell:
        cmd: find . -maxdepth 1 -type d -iname 'prometheus-*' -exec ln -s {} "{{ prometheus.dir }}" \;
        chdir: "{{ server.apps_dir }}"
        creates: "{{ prometheus.dir }}"
      when: prometheus_download.changed

    - name: Configure Prometheus prometheus.yml on {{ inventory_hostname }}
      template:
        src: "prometheus/prometheus.yml.j2"
        dest: "{{ prometheus.dir + '/prometheus.yml'}}"
      when: prometheus_download.changed

    - name: Config Prometheus service on {{ inventory_hostname }}
      template:
        src: systemd/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
      when: prometheus_download.changed
      register: prometheus_service

    - name: Force systemd to reload configs on {{ inventory_hostname }}
      systemd:
        daemon_reload: yes
      when: prometheus_service.changed

    - name: Enable/Start Prometheus service on {{ inventory_hostname }}
      systemd:
        name: prometheus.service
        enabled: yes
        state: started
      when: prometheus_service.changed

  become: true
  become_user: root
  rescue:
    - debug:
        msg: "ERROR in Setup Prometheus on {{ inventory_hostname }}"
  always:
    - debug:
        msg: "Setup Prometheus FINISHED on {{ inventory_hostname }}"
  tags: ["install_software"]
