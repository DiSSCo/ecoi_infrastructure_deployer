---
# assign variables to all the groups

# Variables server_user and conf (json) should be provided as extra-vars when running ansible
server:
  apps_dir: /opt
  apps_version_file_suffix: -installed-version.txt
  user: "{{ server_user }}"
  group: "{{ server_user }}"
  conf: "{{ software_config }}"
  aws_conf: "{{ software_config['general']['aws_s3_limited_access'] }}"
  domain: "nsidr.org"
  environment: "{{ deployment_config['environment'] }}"
  restore_db_backup_after_setup: "{{ deployment_config['restore_db_backup_after_setup'] }}"
  private_ip4_range_cidr: "{{ deployment_config['private_ip4_range_cidr'] }}"

cordra_version: 2.3.0
cordra:
  distribution_url: https://www.cordra.org/assets/sw/cordra-{{ cordra_version }}-distribution.zip
  dir: "{{ server.apps_dir + '/cordra' }}"
  admin_password: "{{ server.conf.cordra.admin_password }}"
  http_port: 80
  http_internal_port: 8080
  https_port: 443
  https_internal_port: 8443
  handleServer_port: 2641
  doip_port: 9000
  handleServer_enabled: "{{True if deployment_config['environment'] == 'production' else False}}"
  doec_library_url: https://github.com/DiSSCo/doec/releases/download/v1.1.0/doec-1.1.0-jar-with-dependencies.jar

  cordra_nsidr_server:
    domain: "{% if deployment_config['default_provider']=='virtualbox' %}_{% else %}{{deployment_config['domain_prefix'] + '' + server.domain }}{% endif %}"
    handle_prefix: "{{'20.5000.1025' if deployment_config['environment'] == 'production' else 'test.20.5000.1025'}}"
    host_ip: "{{ hostvars['cordra_nsidr_server']['ansible_host'] }}"
    handleServer_host: "{{ hostvars['cordra_nsidr_server']['ansible_host'] }}"
    base_uri: "http://{{  '' + server.domain + '/' }}"
    index_name: "cordra_nsidr"
    db_name: "cordra-nsidr"
    initial_users: "{{ server.conf.cordra.users }}"

  cordra_prov_server:
    domain: "{% if deployment_config['default_provider']=='virtualbox' %}_{% else %}{{deployment_config['domain_prefix'] + 'prov.' + server.domain }}{% endif %}"
    handle_prefix: "{{'prov.994' if deployment_config['environment'] == 'production' else 'test.prov.994'}}"
    host_ip: "{{ hostvars['cordra_prov_server']['ansible_host'] }}"
    handleServer_host: "{{ hostvars['cordra_prov_server']['ansible_host'] }}"
    base_uri: ""
    index_name: "cordra_prov"
    db_name: "cordra-prov"
    initial_users: []

handle_tool:
  dir: "{{ server.apps_dir + '/handle'}}"
  distribution_url: https://www.handle.net/hnr-source/handle-9.3.0-distribution.tar.gz

mongodb_version: 4.4.5
# Since MongoDBv4.4 the tools mongodump and mongorestore come in a separate distribution
mongodb_database_tools_version: 100.3.0
mongodb:
  distribution_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-{{ mongodb_version }}.tgz
  dir: "{{ server.apps_dir + '/mongodb'}}"
  host_ip: "{{ hostvars[groups['db_servers'][0]]['ansible_host'] }}"
  port: 27017
  admin_password: "{{ server.conf.mongodb.admin_password }}"
  cordra_password: "{{ server.conf.mongodb.cordra_password }}"
  cordra_db_name: "{{ cordra.cordra_nsidr_server.db_name }}"
  cordra_prov_db_name: "{{ cordra.cordra_prov_server.db_name }}"
  backup: "{{ server.conf.mongodb.backup }}"

  database_tools:
    dir: "{{ server.apps_dir + '/mongodb-database-tools'}}"
    distribution_url: https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2004-x86_64-{{ mongodb_database_tools_version }}.tgz

elk_version: 7.13.0

elasticsearch:
  dir: "{{ server.apps_dir + '/elasticsearch'}}"
  distribution_url: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elk_version }}-linux-x86_64.tar.gz
  cluster_name: nsidr
  node_name: node-1
  address_scheme: "https"
  host_ip: "{{ hostvars[groups['search_engine_servers'][0]]['ansible_host'] }}"
  http_port: 9200
  transport_port: 9300
  index_mapping_total_fields_limits: 100000
  elastic_user: "elastic"
  elastic_password: "{{ server.conf.elasticsearch.admin_password }}"

logstash:
  dir: "{{ server.apps_dir + '/logstash'}}"
  distribution_url: https://artifacts.elastic.co/downloads/logstash/logstash-{{ elk_version }}-linux-x86_64.tar.gz
  host_ip: "{{ hostvars[groups['search_engine_servers'][0]]['ansible_host'] }}"
  http_port: 9600
  beat_port: 5044

filebeat:
  dir: "{{ server.apps_dir + '/filebeat'}}"
  distribution_url: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{{ elk_version }}-linux-x86_64.tar.gz
  app_source: "cordra_log"

kibana:
  dir: "{{ server.apps_dir + '/kibana'}}"
  distribution_url: https://artifacts.elastic.co/downloads/kibana/kibana-{{ elk_version }}-linux-x86_64.tar.gz
  host_ip: "{{ hostvars[groups['monitoring_servers'][0]]['ansible_host'] }}"
  http_port: 5601
  subpath: /kibana

prometheus_version: 2.27.1
prometheus:
  dir: "{{ server.apps_dir + '/prometheus' }}"
  distribution_url: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
  host_ip: "{{ hostvars[groups['monitoring_servers'][0]]['ansible_host'] }}"
  http_port: 9090
  http_internal_port: 9091
  admin_password: "{{ server.conf.prometheus.admin_password }}"
  subpath: /prometheus

node_exporter_version: 1.1.2
node_exporter:
  dir: "{{ server.apps_dir + '/node_exporter' }}"
  distribution_url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
  http_port: 9100
  http_internal_port: 9101
  admin_password: "{{ server.conf.prometheus.admin_password }}"

blackbox_exporter_version: 0.19.0
blackbox_exporter:
  dir: "{{ server.apps_dir + '/blackbox_exporter' }}"
  distribution_url: https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_exporter_version }}/blackbox_exporter-{{ blackbox_exporter_version }}.linux-amd64.tar.gz
  host_ip: "{{ hostvars[groups['monitoring_servers'][0]]['ansible_host'] }}"
  http_port: 9115
  http_internal_port: 9116
  admin_password: "{{ server.conf.prometheus.admin_password }}"

grafana_version: 8.0.2
grafana:
  dir: "{{ server.apps_dir + '/grafana' }}"
  distribution_url: https://dl.grafana.com/oss/release/grafana-{{ grafana_version }}.linux-amd64.tar.gz
  host_ip: "{{ hostvars[groups['monitoring_servers'][0]]['ansible_host'] }}"
  http_port: 80
  https_port: 443
  http_internal_port: 3000
  admin_password: "{{ server.conf.grafana.admin_password }}"
  smtp: "{{ server.conf.grafana.smtp }}"
  notification_email_address: "{{ server.conf.notification_email_address }}"
  domain: "{% if deployment_config['default_provider']=='virtualbox' %}_{% else %}{{deployment_config['domain_prefix'] + 'monitoring.' + server.domain }}{% endif %}"
  subpath: /grafana

ds_viewer:
  dir: "{{ server.apps_dir + '/dsviewer' }}"
  distribution_url: https://github.com/scman1/dsviewer.git
  host_ip: "{{ hostvars[groups['ds_viewer_servers'][0]]['ansible_host'] }}"
  http_port: 80
  https_port: 443
  http_internal_port: 3000
  domain: "{% if deployment_config['default_provider']=='virtualbox' %}_{% else %}{{deployment_config['domain_prefix'] + 'demo.' + server.domain }}{% endif %}"

nginx:
  notification_email_address: "{{ server.conf.notification_email_address }}"

monitoring_proxy:
  domain: "{% if deployment_config['default_provider']=='virtualbox' %}_{% else %}{{deployment_config['domain_prefix'] + 'monitoring.' + server.domain }}{% endif %}"

rdf_validator:
  dir: "{{ server.apps_dir + '/rdf_validator' }}"
  distribution_url: https://github.com/DiSSCo/ODS_rdf_validator.git
  port: 3000
  shex_schema_document_id: SemanticODSShexSchema
  is_shex_schema_provider: no
  external_schema_url: https://nsidr.org/objects/20.5000.1025/SemanticODSShexSchema?payload=ods_schema

object_detection_service:
  dir: "{{ server.apps_dir + '/object_detection_service' }}"
  distribution_url: https://github.com/jgrieb/object-detection-service.git
  model_final_url: https://github.com/2younis/plant-organ-detection/releases/download/v1.0/model_final.pth
  host_ip: "{{ hostvars[groups['object_detection_servers'][0]]['ansible_host'] }}"
  port: 8000
